name: Code Format Check
run-name: Running code format checks with Ruff 🔍

on:
  push:
    branches: "*"
    paths:
      - '**.py'
  pull_request:
    branches: "*"
    paths:
      - '**.py'
  workflow_dispatch:

jobs:
  ruff-format-check:
    name: Ruff Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Ruff
        run: pip install ruff

      - name: Check Python file formatting with Ruff
        run: |
          echo "🔍 Checking code formatting with Ruff..."
          
          # Find all Python files
          echo "Python files to check:"
          find . -name "*.py" -not -path "./.git/*" -not -path "./.pixi/*" | head -10
          
          # Run ruff format check (dry-run to see what would be changed)
          echo "Running ruff format check..."
          if ruff format --check --diff .; then
            echo "✅ All Python files are properly formatted!"
          else
            echo "❌ Some Python files need formatting. Run 'ruff format .' to fix them."
            exit 1
          fi

      - name: Run Ruff linting check  
        run: |
          echo "🔍 Running Ruff linting checks..."
          
          # Run ruff check for linting issues
          if ruff check .; then
            echo "✅ No linting issues found!"
          else
            echo "❌ Linting issues found. Run 'ruff check --fix .' to auto-fix some issues."
            exit 1
          fi

      - name: Ruff format preview (if formatting needed)
        if: failure()
        run: |
          echo "📋 Preview of formatting changes needed:"
          echo "Run the following command locally to fix formatting:"
          echo "  ruff format ."
          echo ""
          echo "Diff preview:"
          ruff format --check --diff . || true
        continue-on-error: true

  ruff-format-summary:
    name: Format Check Summary
    runs-on: ubuntu-latest
    needs: [ruff-format-check]
    if: always()
    steps:
      - name: Create format check summary
        run: |
          echo "## 🔍 Code Format Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status | Description |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Ruff Format Check | ${{ needs.ruff-format-check.result }} | Code formatting compliance check |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.ruff-format-check.result }}" = "success" ]; then
            echo "### ✅ Formatting Status: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "All Python files are properly formatted according to Ruff standards." >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Formatting Status: FAILED" >> $GITHUB_STEP_SUMMARY
            echo "Some Python files need formatting adjustments." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "#### 🛠️ How to Fix:" >> $GITHUB_STEP_SUMMARY
            echo "1. Install Ruff: \`pip install ruff\`" >> $GITHUB_STEP_SUMMARY
            echo "2. Format your code: \`ruff format .\`" >> $GITHUB_STEP_SUMMARY
            echo "3. Check for linting issues: \`ruff check --fix .\`" >> $GITHUB_STEP_SUMMARY
            echo "4. Commit and push the changes" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📚 Ruff Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Formatter**: Ruff (Black-compatible)" >> $GITHUB_STEP_SUMMARY
          echo "- **Linter**: Ruff (replaces flake8, isort, etc.)" >> $GITHUB_STEP_SUMMARY
          echo "- **Config**: \`pyproject.toml\` or \`ruff.toml\` (if present)" >> $GITHUB_STEP_SUMMARY