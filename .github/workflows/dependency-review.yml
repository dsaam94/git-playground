name: Dependency Review
run-name: Checking dependencies for vulnerabilities 🔍

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
# Requires setting up Advanced security settings including enabling the Dependency graph option.
jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          license-check: true
          comment-summary-in-pr: true

  vulnerability-scan:
    name: Vulnerability Scan with OSV-Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OSV-Scanner
        uses: google/osv-scanner-action@v2.2.1
        with:
          scan-args: |-
            -r
            --skip-git
            ./
        continue-on-error: true

      - name: Upload OSV-Scanner results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: osv-scanner-results
          path: |
            osv-scanner.json
            osv-scanner.sarif

  pixi-vulnerability-check:
    name: Pixi Dependencies Vulnerability Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: latest
          cache: true

      - name: Install dependencies
        run: pixi install
        continue-on-error: true

      - name: List and analyze Pixi packages
        run: |
          echo "## 📦 Pixi Dependencies Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # List packages
          echo "Extracting package information..."
          pixi list --json > pixi-packages.json || true
          
          # Count packages and environments
          if [ -f "pixi-packages.json" ]; then
            python3 -c "
            import json
            import sys
            
            try:
                with open('pixi-packages.json', 'r') as f:
                    data = json.load(f)
                
                total_packages = 0
                environments = []
                
                if isinstance(data, dict):
                    for env_name, env_data in data.items():
                        environments.append(env_name)
                        if isinstance(env_data, dict) and 'packages' in env_data:
                            total_packages += len(env_data['packages'])
                
                print(f'- **Total packages:** {total_packages}')
                print(f'- **Environments:** {environments}')
                print(f'- **Configuration file:** pixi.toml')
                
            except Exception as e:
                print(f'Error analyzing packages: {e}')
            " >> $GITHUB_STEP_SUMMARY || echo "Could not analyze pixi packages" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true

      - name: Upload Pixi analysis results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pixi-vulnerability-analysis
          path: pixi-packages.json

  security-summary:
    name: Security Review Summary
    runs-on: ubuntu-latest
    needs: [dependency-review, vulnerability-scan, pixi-vulnerability-check]
    if: always()
    steps:
      - name: Create security summary
        run: |
          echo "## 🔒 Dependency Security Review Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Tool | Status | Description |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Review | ${{ needs.dependency-review.result }} | GitHub's dependency review for PRs |" >> $GITHUB_STEP_SUMMARY
          echo "| OSV-Scanner | ${{ needs.vulnerability-scan.result }} | Multi-ecosystem vulnerability scanner |" >> $GITHUB_STEP_SUMMARY
          echo "| Pixi Security Check | ${{ needs.pixi-vulnerability-check.result }} | Pixi/conda package analysis |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛡️ Security Recommendations" >> $GITHUB_STEP_SUMMARY
          echo "- Review any flagged vulnerabilities immediately" >> $GITHUB_STEP_SUMMARY
          echo "- Update vulnerable dependencies to latest secure versions" >> $GITHUB_STEP_SUMMARY
          echo "- Enable Dependabot for automated security updates" >> $GITHUB_STEP_SUMMARY
          echo "- Regularly audit dependencies for known vulnerabilities" >> $GITHUB_STEP_SUMMARY